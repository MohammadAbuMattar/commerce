<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itsthatjun.ecommerce.mbg.mapper.ReviewMapper">
  <resultMap id="BaseResultMap" type="com.itsthatjun.ecommerce.mbg.model.Review">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_id" jdbcType="NUMERIC" property="productId" />
    <result column="member_id" jdbcType="NUMERIC" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_icon" jdbcType="VARCHAR" property="memberIcon" />
    <result column="star" jdbcType="NUMERIC" property="star" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="tittle" jdbcType="VARCHAR" property="tittle" />
    <result column="likes" jdbcType="NUMERIC" property="likes" />
    <result column="verified" jdbcType="BIT" property="verified" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, member_id, member_name, member_icon, star, created_at, updated_at, 
    tittle, likes, verified, content
  </sql>
  <select id="selectByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from review
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ReviewExample">
    delete from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.Review" useGeneratedKeys="true">
    insert into review (product_id, member_id, member_name, 
      member_icon, star, created_at, 
      updated_at, tittle, likes, 
      verified, content)
    values (#{productId,jdbcType=NUMERIC}, #{memberId,jdbcType=NUMERIC}, #{memberName,jdbcType=VARCHAR}, 
      #{memberIcon,jdbcType=VARCHAR}, #{star,jdbcType=NUMERIC}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{tittle,jdbcType=VARCHAR}, #{likes,jdbcType=NUMERIC}, 
      #{verified,jdbcType=BIT}, #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.Review" useGeneratedKeys="true">
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberIcon != null">
        member_icon,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="tittle != null">
        tittle,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="verified != null">
        verified,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=NUMERIC},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=NUMERIC},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberIcon != null">
        #{memberIcon,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        #{star,jdbcType=NUMERIC},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tittle != null">
        #{tittle,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=NUMERIC},
      </if>
      <if test="verified != null">
        #{verified,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.ReviewExample" resultType="java.lang.Long">
    select count(*) from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=NUMERIC},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=NUMERIC},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberIcon != null">
        member_icon = #{record.memberIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.star != null">
        star = #{record.star,jdbcType=NUMERIC},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tittle != null">
        tittle = #{record.tittle,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=NUMERIC},
      </if>
      <if test="record.verified != null">
        verified = #{record.verified,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review
    set id = #{record.id,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=NUMERIC},
      member_id = #{record.memberId,jdbcType=NUMERIC},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_icon = #{record.memberIcon,jdbcType=VARCHAR},
      star = #{record.star,jdbcType=NUMERIC},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      tittle = #{record.tittle,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=NUMERIC},
      verified = #{record.verified,jdbcType=BIT},
      content = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itsthatjun.ecommerce.mbg.model.Review">
    update review
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=NUMERIC},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=NUMERIC},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberIcon != null">
        member_icon = #{memberIcon,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=NUMERIC},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tittle != null">
        tittle = #{tittle,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=NUMERIC},
      </if>
      <if test="verified != null">
        verified = #{verified,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itsthatjun.ecommerce.mbg.model.Review">
    update review
    set product_id = #{productId,jdbcType=NUMERIC},
      member_id = #{memberId,jdbcType=NUMERIC},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_icon = #{memberIcon,jdbcType=VARCHAR},
      star = #{star,jdbcType=NUMERIC},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      tittle = #{tittle,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=NUMERIC},
      verified = #{verified,jdbcType=BIT},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>