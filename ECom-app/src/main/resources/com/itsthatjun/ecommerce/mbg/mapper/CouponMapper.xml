<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itsthatjun.ecommerce.mbg.mapper.CouponMapper">
  <resultMap id="BaseResultMap" type="com.itsthatjun.ecommerce.mbg.model.Coupon">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coupon_type" jdbcType="INTEGER" property="couponType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="discount_type" jdbcType="INTEGER" property="discountType" />
    <result column="amount" jdbcType="NUMERIC" property="amount" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="publish_count" jdbcType="INTEGER" property="publishCount" />
    <result column="used_count" jdbcType="INTEGER" property="usedCount" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, coupon_type, name, discount_type, amount, start_time, end_time, note, count, 
    publish_count, used_count, code, status
  </sql>
  <select id="selectByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.CouponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coupon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coupon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.CouponExample">
    delete from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.Coupon" useGeneratedKeys="true">
    insert into coupon (coupon_type, name, discount_type, 
      amount, start_time, end_time, 
      note, count, publish_count, 
      used_count, code, status
      )
    values (#{couponType,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{discountType,jdbcType=INTEGER}, 
      #{amount,jdbcType=NUMERIC}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{publishCount,jdbcType=INTEGER}, 
      #{usedCount,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.itsthatjun.ecommerce.mbg.model.Coupon" useGeneratedKeys="true">
    insert into coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="couponType != null">
        coupon_type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="discountType != null">
        discount_type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="publishCount != null">
        publish_count,
      </if>
      <if test="usedCount != null">
        used_count,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="couponType != null">
        #{couponType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="discountType != null">
        #{discountType,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=NUMERIC},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="publishCount != null">
        #{publishCount,jdbcType=INTEGER},
      </if>
      <if test="usedCount != null">
        #{usedCount,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itsthatjun.ecommerce.mbg.model.CouponExample" resultType="java.lang.Long">
    select count(*) from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coupon
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.couponType != null">
        coupon_type = #{record.couponType,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.discountType != null">
        discount_type = #{record.discountType,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=NUMERIC},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.publishCount != null">
        publish_count = #{record.publishCount,jdbcType=INTEGER},
      </if>
      <if test="record.usedCount != null">
        used_count = #{record.usedCount,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coupon
    set id = #{record.id,jdbcType=INTEGER},
      coupon_type = #{record.couponType,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      discount_type = #{record.discountType,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=NUMERIC},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      publish_count = #{record.publishCount,jdbcType=INTEGER},
      used_count = #{record.usedCount,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itsthatjun.ecommerce.mbg.model.Coupon">
    update coupon
    <set>
      <if test="couponType != null">
        coupon_type = #{couponType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="discountType != null">
        discount_type = #{discountType,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=NUMERIC},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="publishCount != null">
        publish_count = #{publishCount,jdbcType=INTEGER},
      </if>
      <if test="usedCount != null">
        used_count = #{usedCount,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itsthatjun.ecommerce.mbg.model.Coupon">
    update coupon
    set coupon_type = #{couponType,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      discount_type = #{discountType,jdbcType=INTEGER},
      amount = #{amount,jdbcType=NUMERIC},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      publish_count = #{publishCount,jdbcType=INTEGER},
      used_count = #{usedCount,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>